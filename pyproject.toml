# /pyproject.toml
[project]
description = "The official Superb AI Curate client for Python"
name = "superb-ai-curate"
version = "1.1.0"

[[project.authors]]
name = "Superb AI"
email = "support@superb-ai.com"

[tool.poetry]
name = "superb-ai-curate"
version = "1.1.0"
license = "MIT"
description = "The official Superb AI Curate client for Python"
authors = ["Superb AI <support@superb-ai.com>"]
homepage = "https://superb-ai.com/"
repository = "https://github.com/Superb-AI-Suite/superb-ai-curate-python"
documentation = "https://docs.superb-ai.com/reference/introduction-curate-sdk"
readme = "README.md"
packages = [{ include = "spb_curate" }]
keywords = [
  "superb ai",
  "superbapi",
  "tasks",
  "categorization",
  "annotation",
  "labeling",
  "dataops",
  "mlops",
  "curation",
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Natural Language :: English",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "License :: OSI Approved :: MIT License",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Topic :: Software Development :: Libraries",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

[tool.poetry.dependencies]
python = ">=3.7,<4.0"
requests = ">=2.20.0,<3.0.0"

# Dev
black = { version = "*", optional = true }
coveralls = { version = "*", optional = true }
isort = { version = "*", optional = true }
pytest = { version = "*", optional = true }
pytest-cov = { version = "*", optional = true }

# Docs
Sphinx = { version = "*", optional = true }
sphinxcontrib-napoleon = { version = "*", optional = true }
sphinx-autodoc-typehints = { version = "^1.19.4", optional = true }
sphinx-pyproject = { version = "*", optional = true }
sphinx-rtd-theme = { version = "*", optional = true }

[tool.poetry.extras]
dev = ["black", "coveralls", "isort", "pytest", "pytest-cov"]
docs = [
  "Sphinx",
  "sphinxcontrib-napoleon",
  "sphinx-autodoc-typehints",
  "sphinx-pyproject",
  "sphinx-rtd-theme",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.sphinx-pyproject]
copyright = "2023, Superb AI"
extensions = [
  "sphinx.ext.autodoc",
  "sphinx.ext.coverage",
  "sphinx.ext.viewcode",
  "sphinx.ext.githubpages",
  "sphinx_rtd_theme",
  "sphinx.ext.napoleon",
  "sphinx_autodoc_typehints",
]
language = "en"
html_baseurl = ""
html_theme = "sphinx_rtd_theme"
project = "superb-ai-curate"
typehints_defaults = "braces"

[tool.black]
line-length = 88
target-version = ["py37", "py38", "py39", "py310", "py311"]
exclude = '''
/(
    \.eggs/
  | \.git/
  | \.tox/
  | \.venv/
  | _build/
  | build/
  | dist/
  | venv/
)
'''

[tool.isort]
profile = "black"

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "def __str__",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "if typing.TYPE_CHECKING:",
]

[tool.coverage.run]
source = ["spb_curate", "tests"]
omit = ["tests/api/conftest.py", "tests/api/curate/conftest.py"]
